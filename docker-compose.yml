services:
  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  bot:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_USER: "dino"
        APP_UID: "1001"
        APP_GID: "1001"
        PYTHON_VERSION: "3.13"
        POETRY_VERSION: "2.1.4"   # optional
    image: jdinbot:latest
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: >
      /bin/sh -c "./docker/scripts/wait-for-it.sh ${POSTGRES_HOST}:${POSTGRES_PORT} --timeout=30 --strict -- uvicorn jdinbot.main:jdinbot --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    restart: unless-stopped

volumes:
  pgdata: